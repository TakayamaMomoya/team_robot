//*****************************************************
//
// スカイボックスの処理[skybox.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "skybox.h"
#include "manager.h"
#include "renderer.h"
#include "player.h"
#include "texture.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
const float CHANGE_TEX_LINE = 100000.0f;	// テクスチャを変えるライン
}

//*****************************************************
// 静的メンバ変数宣言
//*****************************************************
CSkybox *CSkybox::m_pSkybox = nullptr;	// 自身のポインタ

//=====================================================
// コンストラクタ
//=====================================================
CSkybox::CSkybox(int nPriority) : CMeshCube(nPriority)
{

}

//=====================================================
// デストラクタ
//=====================================================
CSkybox::~CSkybox()
{

}

//=====================================================
// 生成処理
//=====================================================
CSkybox *CSkybox::Create()
{
	CSkybox *pSkybox = nullptr;

	if (pSkybox == nullptr)
	{
		pSkybox = new CSkybox;

		if (pSkybox != nullptr)
		{
			// 初期化
			pSkybox->Init();
		}
	}

	return pSkybox;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CSkybox::Init(void)
{
	// 継承クラスの初期化
	CMeshCube::Init();

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CSkybox::Uninit(void)
{
	// 継承クラスの終了
	CMeshCube::Uninit();
}

//=====================================================
// 更新処理
//=====================================================
void CSkybox::Update(void)
{
	// プレイヤーの追従
	FollowPlayer();

	// 継承クラスの更新
	CMeshCube::Update();
}

//=====================================================
// プレイヤーの追従
//=====================================================
void CSkybox::FollowPlayer(void)
{
	CPlayer *pPlayer = CPlayer::GetInstance();

	if (pPlayer == nullptr)
		return;

	SetPosition(pPlayer->GetPosition());
}

//=====================================================
// 描画処理
//=====================================================
void CSkybox::Draw(void)
{
	CMeshCube::Draw();
}